# -*- coding: utf-8 -*-
"""main.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Iq-qPHejy6dKzm8-1IxbPd8uwBKBBAiD
"""

from fastapi import FastAPI, UploadFile, File
import pandas as pd
import pickle
import os
from src.retrain import train_model

app = FastAPI()

MODEL_PATH = "models/model.pkl"

# Load the trained model
def load_model():
    if os.path.exists(MODEL_PATH):
        with open(MODEL_PATH, 'rb') as f:
            return pickle.load(f)
    return None

model = load_model()

@app.get("/")
def home():
    return {"message": "Model API is running"}

@app.post("/predict/")
def predict(features: dict):
    """Predict using the trained model."""
    global model
    if model is None:
        return {"error": "Model not found. Please retrain first."}

    df = pd.DataFrame([features])
    prediction = model.predict(df)[0]

    return {"prediction": int(prediction)}

@app.post("/upload-data/")
async def upload_data(file: UploadFile = File(...)):
    """Upload new training data and store it."""
    file_path = f"data/train/{file.filename}"

    with open(file_path, "wb") as f:
        f.write(file.file.read())

    return {"message": "Data uploaded successfully", "filename": file.filename}

@app.post("/retrain/")
def retrain():
    """Trigger model retraining."""
    global model
    result = train_model()
    model = load_model()  # Reload the updated model
    return result